{"ts":1364048365630,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\"\"\"Fichier contenant la logique du plateau\"\"\"\nimport pieces\n\nclass Plateau():\n    \"\"\"Décrit le plateau de jeu\"\"\"\n    \n    def __init__(self):\n        \"\"\"Construction du plateau\"\"\"\n        self.t = [[None for j in range(8)] for i in range(8)]\n\n    def setup(self, blanc, noir):\n        \"\"\"Initialisation du plateau avec les pièces placées\"\"\"\n        self.joueurBlanc = blanc\n        self.joueurNoir = noir\n        self.t[0][0] = pieces.Tour(self, blanc, 0, 0)\n        self.t[0][7] = pieces.Tour(self, blanc, 0, 7)\n        self.t[0][1] = pieces.Cavalier(self, blanc, 0, 1)\n        self.t[0][6] = pieces.Cavalier(self, blanc, 0, 6)\n        self.t[0][2] = pieces.Fou(self, blanc, 0, 2)\n        self.t[0][5] = pieces.Fou(self, blanc, 0, 5)\n        self.t[0][3] = pieces.Roi(self, blanc, 0, 3)\n        self.t[0][4] = pieces.Dame(self, blanc, 0, 4)\n        self.t[7][0] = pieces.Tour(self, noir, 7, 0)\n        self.t[7][7] = pieces.Tour(self, noir, 7, 7)\n        self.t[7][1] = pieces.Cavalier(self, noir, 7, 1)\n        self.t[7][6] = pieces.Cavalier(self, noir, 7, 6)\n        self.t[7][2] = pieces.Fou(self, noir, 7, 2)\n        self.t[7][5] = pieces.Fou(self, noir, 7, 5)\n        self.t[7][3] = pieces.Roi(self, noir, 7, 3)\n        self.t[7][4] = pieces.Dame(self, noir, 7, 4)\n        for i in range(8):\n            self.t[1][i] = pieces.Pion(self, blanc, 1, i)\n            self.t[6][i] = pieces.Pion(self, noir, 6, i)\n\n    def getJoueurNoir(self):\n        return self.joueurNoir\n\n    def getPiece(self, x, y):\n        return self.t[x][y]\n\n    def setPiece(self, piece, x, y):\n        piece.updateCoord(x, y)\n        self.t[x][y] = piece\n\n    def delPiece(self, x, y):\n        self.t[x][y] = None\n\n    def bougerPiece(self, joueur, xd, yd, xa, ya):\n        piece = self.getPiece(xd, yd)\n        if piece is not None:\n            if piece.get_joueur() == joueur:\n                if piece.peut_bouger(xa, ya):\n                    self.setPiece(piece, xa, ya)\n                    self.delPiece(xd, yd)\n                else:\n                    raise Exception(\"Mouvement non autorisé\")\n            else:\n                raise Exception(\"Cette pièce ne vous appartient pas\")\n        else:\n            raise Exception(\"Cette pièce n'existe pas\")\n\n"]],"start1":0,"start2":0,"length1":0,"length2":2236}]],"length":2236}
{"contributors":[],"silentsave":true,"ts":1364304595684,"patch":[[{"diffs":[[0,"ueurNoir"],[1,"\n    \n    def getJoueurBlanc'"],[0,"\n\n    de"]],"start1":1465,"start2":1465,"length1":16,"length2":45},{"diffs":[[0,"peut"],[-1,"_b"],[1,"B"],[0,"ouge"]],"start1":1910,"start2":1910,"length1":10,"length2":9}]],"length":2264,"saved":false}
{"ts":1364304602068,"patch":[[{"diffs":[[0,"eurBlanc"],[-1,"'"],[1,"(self):\n        return self?"],[0,"\n\n    de"]],"start1":1493,"start2":1493,"length1":17,"length2":44}]],"length":2291,"saved":false}
{"ts":1364304602993,"patch":[[{"diffs":[[0,"self"],[-1,"?"],[1,"."],[0,"\n\n  "]],"start1":1524,"start2":1524,"length1":9,"length2":9}]],"length":2291,"saved":false}
{"ts":1364304604563,"patch":[[{"diffs":[[0,"rn self."],[1,"joueurBla"],[0,"\n\n    de"]],"start1":1521,"start2":1521,"length1":16,"length2":25}]],"length":2300,"saved":false}
{"ts":1364304605934,"patch":[[{"diffs":[[0,"oueurBla"],[1,"nc"],[0,"\n\n    de"]],"start1":1530,"start2":1530,"length1":16,"length2":18}]],"length":2302,"saved":false}
