{"ts":1364048010830,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"class Piece():\n    def __init__(self, plateau, joueur, x, y):\n        self.joueur = joueur\n        self.plateau = plateau\n        self.x = x\n        self.y = y\n\n    def updateCoord(self, x, y):\n        self.x = x\n        self.y = y\n\n    def get_repres(self):\n        try:\n            return self.repres\n        except:\n            raise TypeError(\"Unimplemented method\")\n    \n    def get_joueur(self):\n        return self.joueur\n\n    def peut_bouger(self, x_a, y_a):\n        pass\n\nclass Pion(Piece):\n    def __init__(self, plateau, joueur, x, y):\n        super().__init__(plateau, joueur, x, y)\n        self.repres = \"p\"\n        self.double = True\n        self.a_double = False\n\n    def peut_bouger(self, x_a, y_a):\n        print(self.x, self.y, x_a, y_a)\n        if self.joueur is self.plateau.getJoueurNoir():\n            sens = -1\n        else:\n            sens = 1\n        if (self.y == y_a and self.x+sens == x_a and\n            self.plateau.getPiece(x_a, y_a) is None):\n            return True\n        return False\n            \n\nclass Tour(Piece):\n    def __init__(self, plateau, joueur, x, y):\n        super().__init__(plateau, joueur, x, y)\n        self.repres = \"t\"\n\n    def peut_bouger(self, x_a, y_a):\n        if self.plateau.getPiece(x_a, y_a) is not None:\n            if self.plateau.getPiece(x_a, y_a).get_joueur() is self.joueur:\n                return False\n        if self.x == x_a and self.y != y_a:\n            sens = (y_a - self.y)//abs(y_a - self.y)\n            for i in range(self.y+sens, y_a, sens):\n                if self.plateau.getPiece(self.x, i) is not None:\n                    return False\n            return True\n        elif self.x != x_a and self.y == y_a:\n            sens = (x_a - self.x)//abs(x_a - self.x)\n            for i in range(self.x+sens, x_a, sens):\n                if self.plateau.getPiece(i, self.y) is not None:\n                    return False\n            return True\n        else:\n            return False\n        \n\nclass Cavalier(Piece):\n    def __init__(self, plateau, joueur, x, y):\n        super().__init__(plateau, joueur, x, y)\n        self.repres = \"c\"\n\n    def peut_bouger(self, x_a, y_a):\n        pass\n\nclass Fou(Piece):\n    def __init__(self, plateau, joueur, x, y):\n        super().__init__(plateau, joueur, x, y)\n        self.repres = \"f\"\n\n    def peut_bouger(self, x_a, y_a):\n        pass\n\nclass Dame(Piece):\n    def __init__(self, plateau, joueur, x, y):\n        super().__init__(plateau, joueur, x, y)\n        self.repres = \"d\"\n\n    def peut_bouger(self, x_a, y_a):\n        return Tour.peut_bouger(self) or Fou.peut_bouger(self)\n\nclass Roi(Piece):\n    def __init__(self, plateau, joueur, x, y):\n        super().__init__(plateau, joueur, x, y)\n        self.repres = \"r\"\n\n    def peut_bouger(self, x_a, y_a):\n        mouvement = [(x,y) for x in range(-1, 2) for y in range(-1, 2)\n            if not (x == y and x == 0)]\n        if self.plateau.getPiece(x_a, y_a) is not None:\n            if self.plateau.getPiece(x_a, y_a).get_joueur() is self.joueur:\n                return False\n        for (xm, ym) in mouvement:\n            if self.x + xm == x_a and self.y + ym == y_a:\n                return True\n            \n\n"]],"start1":0,"start2":0,"length1":0,"length2":3180}]],"length":3180}
{"contributors":[],"silentsave":true,"ts":1364048045534,"patch":[[{"diffs":[[0,":\n        super("],[1,"Piece, self"],[0,").__init__(plate"]],"start1":2035,"start2":2035,"length1":32,"length2":43}]],"length":3191,"saved":false}
{"ts":1364048063196,"patch":[[{"diffs":[[0,"per("],[-1,"Piece, self"],[0,").__"]],"start1":2047,"start2":2047,"length1":19,"length2":8}]],"length":3180,"saved":false}
{"ts":1364048090902,"patch":[[{"diffs":[[0,"     super().__i"],[-1,"n"],[0,"i"],[1,"n"],[0,"t__(plateau, jou"]],"start1":2040,"start2":2040,"length1":34,"length2":34}]],"length":3180,"saved":false}
{"ts":1364048092480,"patch":[[{"diffs":[[0,"__ii"],[-1,"n"],[0,"t_"],[1,"n"],[0,"_(pl"]],"start1":2053,"start2":2053,"length1":11,"length2":11}]],"length":3180,"saved":false}
{"ts":1364048094312,"patch":[[{"diffs":[[0,".__i"],[1,"n"],[0,"it_"],[-1,"n"],[0,"_(pl"]],"start1":2052,"start2":2052,"length1":12,"length2":12}]],"length":3180,"saved":false}
{"ts":1364048151286,"patch":[[{"diffs":[[0,"      return Fal"],[-1,"s"],[0,"e"],[1,"s"],[0,"\n        \n\nclass"]],"start1":1938,"start2":1938,"length1":34,"length2":34}]],"length":3180,"saved":false}
{"ts":1364048152819,"patch":[[{"diffs":[[0,"turn Fal"],[-1,"e"],[0,"s"],[1,"e"],[0,"\n       "]],"start1":1946,"start2":1946,"length1":18,"length2":18}]],"length":3180,"saved":false}
{"ts":1364048155414,"patch":[[{"diffs":[[0,"        return F"],[-1,"alse"],[1,"ALSE"],[0,"\n        \n\nclass"]],"start1":1936,"start2":1936,"length1":36,"length2":36}]],"length":3180,"saved":false}
{"ts":1364048161472,"patch":[[{"diffs":[[0,"rn F"],[-1,"ALSE"],[1,"alse"],[0,"\n   "]],"start1":1948,"start2":1948,"length1":12,"length2":12}]],"length":3180,"saved":false}
{"contributors":[],"silentsave":true,"ts":1364304066250,"patch":[[{"diffs":[[0,"ss Piece"],[-1,"()"],[0,":\n    de"]],"start1":3,"start2":3,"length1":18,"length2":16}]],"length":3178,"saved":false}
{"ts":1364304076269,"patch":[[{"diffs":[[0,"ss Piece"],[1,"(Object)"],[0,":\n    de"]],"start1":3,"start2":3,"length1":16,"length2":24}]],"length":3186,"saved":false}
{"ts":1364304090836,"patch":[[{"diffs":[[0,"iece"],[-1,"(Object)"],[0,":\n  "]],"start1":7,"start2":7,"length1":16,"length2":8}]],"length":3178,"saved":false}
{"ts":1364304572618,"patch":[[{"diffs":[[0,"ur\n\n    def peut"],[-1,"_b"],[1,"B"],[0,"ouger(self, x_a,"]],"start1":424,"start2":424,"length1":34,"length2":33},{"diffs":[[0,"se\n\n    def peut"],[-1,"_b"],[1,"B"],[0,"ouger(self, x_a,"]],"start1":672,"start2":672,"length1":34,"length2":33},{"diffs":[[0,"t\"\n\n    def peut"],[-1,"_b"],[1,"B"],[0,"ouger(self, x_a,"]],"start1":1168,"start2":1168,"length1":34,"length2":33},{"diffs":[[0,"c\"\n\n    def peut"],[-1,"_b"],[1,"B"],[0,"ouger(self, x_a,"]],"start1":2103,"start2":2103,"length1":34,"length2":33},{"diffs":[[0,"f\"\n\n    def peut"],[-1,"_b"],[1,"B"],[0,"ouger(self, x_a,"]],"start1":2293,"start2":2293,"length1":34,"length2":33},{"diffs":[[0,"d\"\n\n    def peut"],[-1,"_b"],[1,"B"],[0,"ouger(self, x_a,"]],"start1":2484,"start2":2484,"length1":34,"length2":33},{"diffs":[[0,"rn Tour.peut"],[-1,"_b"],[1,"B"],[0,"ouger(self) "]],"start1":2536,"start2":2536,"length1":26,"length2":25},{"diffs":[[0," or Fou.peut"],[-1,"_b"],[1,"B"],[0,"ouger(self)\n"]],"start1":2560,"start2":2560,"length1":26,"length2":25},{"diffs":[[0,"peut"],[-1,"_b"],[1,"B"],[0,"ouge"]],"start1":2734,"start2":2734,"length1":10,"length2":9}]],"length":3169,"saved":false}
{"contributors":[],"silentsave":true,"ts":1364328870720,"patch":[[{"diffs":[[1,"python3 echecs.py"],[0,"class Piece:\n   "]],"start1":0,"start2":0,"length1":16,"length2":33}]],"length":3186,"saved":false}
{"ts":1364328872112,"patch":[[{"diffs":[[1,"python3 echecs.py"],[0,"python3 "]],"start1":0,"start2":0,"length1":8,"length2":25}]],"length":3203,"saved":false}
